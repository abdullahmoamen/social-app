{"version":3,"sources":["components/Chat.js"],"names":["Chat","socket","useRef","appState","useContext","StateContext","appDispatch","DispatchContext","inputRef","chatLog","useImmer","fieldValue","chatMessages","state","setState","useEffect","isChatOpen","current","focus","type","scrollTop","scrollHeight","length","io","process","BACKENDURL","on","message","draft","push","disconnect","id","className","onClick","ref","map","index","username","user","src","avatar","to","onSubmit","e","preventDefault","emit","token","chat","required","value","onChange","target","placeholder","autoComplete","autoFocus"],"mappings":"yLA4GeA,UArGf,WACI,IAAMC,EAAQC,iBAAO,MACfC,EAAWC,qBAAWC,KACtBC,EAAcF,qBAAWG,KACzBC,EAAUN,iBAAO,MACjBO,EAAUP,iBAAO,MACvB,EAAuBQ,YAAS,CAC5BC,WAAW,GACXC,aAAa,KAFjB,mBAAOC,EAAP,KAAaC,EAAb,KA6CA,OAxCAC,qBAAU,WACHZ,EAASa,aACRR,EAASS,QAAQC,QACjBZ,EAAY,CAACa,KAAK,4BAExB,CAAChB,EAASa,aAEZD,qBAAU,WACNN,EAAQQ,QAAQG,UAAYX,EAAQQ,QAAQI,aACzCR,EAAMD,aAAaU,SAAWnB,EAASa,YACtCV,EAAY,CAACa,KAAK,+BAExB,CAACN,EAAMD,eAETG,qBAAU,WAON,OANAd,EAAOgB,QAASM,IAAGC,mIAAYC,YAAa,6CAC5CxB,EAAOgB,QAAQS,GAAG,kBAAmB,SAAAC,GACjCb,GAAS,SAAAc,GACLA,EAAMhB,aAAaiB,KAAKF,SAGzB,kBAAK1B,EAAOgB,QAAQa,gBAC7B,IAmBE,sBAAKC,GAAG,eAAeC,UAAW,4DAA8D7B,EAASa,WAAa,2BAA2B,IAAjJ,UACI,sBAAKgB,UAAU,4BAAf,iBAEI,sBAAMA,UAAU,uBAAuBC,QAAS,kBAAI3B,EAAY,CAACa,KAAK,eAAtE,SACI,mBAAGa,UAAU,6BAGzB,qBAAKD,GAAG,OAAOC,UAAU,WAAWE,IAAKzB,EAAzC,SACKI,EAAMD,aAAauB,KAAI,SAACR,EAAQS,GAC7B,OAAGT,EAAQU,UAAYlC,EAASmC,KAAKD,SAE7B,sBAAKL,UAAU,YAAf,UACI,qBAAKA,UAAU,eAAf,SACI,qBAAKA,UAAU,qBAAf,SAAqCL,EAAQA,YAErD,qBAAKK,UAAU,0BAA0BO,IAAKZ,EAAQa,WAJtBJ,GASpC,sBAAiBJ,UAAU,aAA3B,UACI,cAAC,IAAD,CAAMS,GAAE,mBAAcd,EAAQU,UAA9B,SACA,qBAAKL,UAAU,cAAcO,IAAKZ,EAAQa,WAE9C,qBAAKR,UAAU,eAAf,SACI,sBAAKA,UAAU,qBAAf,UACA,cAAC,IAAD,CAAMS,GAAE,mBAAcd,EAAQU,UAA9B,SACI,mCAASV,EAAQU,SAAjB,UAEHV,EAAQA,eATHS,QAgBtB,sBACIM,SA/CR,SAAsBC,GAClBA,EAAEC,iBAEF3C,EAAOgB,QAAQ4B,KAAK,kBAAkB,CAAClB,QAAQd,EAAMF,WAAWmC,MAAO3C,EAASmC,KAAKQ,MAAMC,KAAK5C,EAASmC,KAAKS,OAC9GjC,GAAS,SAAAc,GACLA,EAAMhB,aAAaiB,KAAK,CAACF,QAASC,EAAMjB,WAAW0B,SAASlC,EAASmC,KAAKD,SAASG,OAAOrC,EAASmC,KAAKE,OAAOO,KAAK5C,EAASmC,KAAKS,OAClInB,EAAMjB,WAAa,OA0CnBoB,GAAG,WAAWC,UAAU,uBAF5B,SAGI,uBACAgB,UAAQ,EACRC,MAAOpC,EAAMF,WACbuC,SA3DR,SAA2BP,GACvB,IAAMM,EAAQN,EAAEQ,OAAOF,MACvBnC,GAAS,SAAAc,GACLA,EAAMjB,WAAasC,MAyDnBf,IAAK1B,EAAUW,KAAK,OAAOa,UAAU,aAAaD,GAAG,YAAYqB,YAAY,uBAAkBC,aAAa,MAAMC,WAAS","file":"static/js/5.efdc49d6.chunk.js","sourcesContent":["import React,{useContext,useEffect,useRef} from 'react';\r\nimport StateContext from './../StateContext';\r\nimport DispatchContext from './../DispatchContext';\r\nimport {useImmer} from 'use-immer';\r\nimport io from 'socket.io-client';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction Chat() {\r\n    const socket =useRef(null);\r\n    const appState = useContext(StateContext);\r\n    const appDispatch = useContext(DispatchContext);\r\n    const inputRef =useRef(null);\r\n    const chatLog = useRef(null);\r\n    const [state,setState]=useImmer({\r\n        fieldValue:'',\r\n        chatMessages:[],\r\n    })\r\n\r\n    useEffect(() =>{\r\n        if(appState.isChatOpen){\r\n            inputRef.current.focus()\r\n            appDispatch({type:'clearUnreadChatCount'})\r\n        }\r\n    },[appState.isChatOpen])\r\n\r\n    useEffect(() =>{\r\n        chatLog.current.scrollTop = chatLog.current.scrollHeight;\r\n        if(state.chatMessages.length && !appState.isChatOpen){\r\n            appDispatch({type:'incrementUnreadChatCount'})\r\n        }\r\n    },[state.chatMessages])\r\n\r\n    useEffect(() =>{\r\n        socket.current =io(process.env.BACKENDURL ||'https://backend-social-app1.herokuapp.com')\r\n        socket.current.on('chatFromServer' , message=>{\r\n            setState(draft=>{\r\n                draft.chatMessages.push(message);\r\n            }) \r\n        })\r\n        return ()=> socket.current.disconnect(); //clean up\r\n    },[])\r\n\r\n    function handleFieldChange(e){\r\n        const value = e.target.value\r\n        setState(draft=>{\r\n            draft.fieldValue = value\r\n        })\r\n    }\r\n\r\n    function handleSubmit(e){\r\n        e.preventDefault();\r\n        // send messages to chat server\r\n        socket.current.emit('chatFromBrowser',{message:state.fieldValue,token: appState.user.token,chat:appState.user.chat})\r\n        setState(draft=>{\r\n            draft.chatMessages.push({message: draft.fieldValue,username:appState.user.username,avatar:appState.user.avatar,chat:appState.user.chat});\r\n            draft.fieldValue = '';\r\n        })\r\n    }\r\n    return (\r\n        <div id=\"chat-wrapper\" className={'chat-wrapper shadow border-top border-left border-right ' + (appState.isChatOpen ? 'chat-wrapper--is-visible':'')}>\r\n            <div className=\"chat-title-bar bg-primary\">\r\n                Chat\r\n                <span className=\"chat-title-bar-close\" onClick={()=>appDispatch({type:'closeChat'})}>\r\n                    <i className=\"fas fa-times-circle\"></i>\r\n                </span>\r\n        </div>\r\n        <div id=\"chat\" className=\"chat-log\" ref={chatLog}>\r\n            {state.chatMessages.map((message,index) =>{\r\n                if(message.username == appState.user.username){\r\n                    return(\r\n                        <div className=\"chat-self\" key={index}>\r\n                            <div className=\"chat-message\">\r\n                                <div className=\"chat-message-inner\">{message.message}</div>\r\n                            </div>\r\n                        <img className=\"chat-avatar avatar-tiny\" src={message.avatar} />\r\n                        </div>\r\n                    )\r\n                }\r\n                return(\r\n                    <div key={index} className=\"chat-other\">\r\n                        <Link to={`/profile/${message.username}`}>\r\n                        <img className=\"avatar-tiny\" src={message.avatar} />\r\n                    </Link>\r\n                    <div className=\"chat-message\">\r\n                        <div className=\"chat-message-inner\">\r\n                        <Link to={`/profile/${message.username}`}>\r\n                            <strong>{message.username}: </strong>\r\n                        </Link>\r\n                        {message.message}\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                )\r\n            })}\r\n        </div>\r\n        <form \r\n            onSubmit={handleSubmit}\r\n            id=\"chatForm\" className=\"chat-form border-top\">\r\n            <input\r\n            required\r\n            value={state.fieldValue} \r\n            onChange={handleFieldChange}\r\n            ref={inputRef} type=\"text\" className=\"chat-field\" id=\"chatField\" placeholder=\"Type a messageâ€¦\" autoComplete=\"off\" autoFocus/>\r\n        </form>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Chat\r\n"],"sourceRoot":""}