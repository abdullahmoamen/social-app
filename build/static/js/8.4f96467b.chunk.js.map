{"version":3,"sources":["components/ViewSinglePost.js"],"names":["withRouter","props","appState","useContext","StateContext","appDispatch","DispatchContext","useState","isLoading","setIsLoading","post","setPost","id","useParams","useEffect","ourRequest","Axios","CancelToken","source","a","get","cancelToken","token","response","data","console","log","fetchPost","cancel","title","date","Date","createdDate","dateFormatted","getMonth","getDate","getFullYear","window","confirm","url","user","method","type","value","history","push","username","className","loggedIn","author","to","data-tip","data-for","onClick","src","avatar","children","body"],"mappings":"+PAsGeA,uBA3Ff,SAAwBC,GACpB,IAAMC,EAAWC,qBAAWC,KACtBC,EAAcF,qBAAWG,KAC/B,EAA+BC,oBAAS,GAAxC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAqBF,qBAArB,mBAAOG,EAAP,KAAYC,EAAZ,KACOC,EAAKC,cAALD,GAmBP,GAjBAE,qBAAU,WACN,IAAMC,EAAaC,IAAMC,YAAYC,SAD1B,4CAEX,4BAAAC,EAAA,+EAE6BH,IAAMI,IAAN,gBAAmBR,GAAK,CAACS,YAAaN,EAAWO,QAF9E,OAEcC,EAFd,OAGQZ,EAAQY,EAASC,MACjBf,GAAa,GAJrB,gDAMQgB,QAAQC,IAAI,2BANpB,0DAFW,sBAYX,OAZW,mCAWXC,GACM,WACFZ,EAAWa,YAEjB,CAAChB,KAECJ,IAAcE,EACd,OAAO,cAAC,IAAD,IAGX,GAAGF,EACC,OACA,cAAC,IAAD,CAAMqB,MAAM,GAAZ,SACI,cAAC,IAAD,MAKR,IAAMC,EAAK,IAAIC,KAAKrB,EAAKsB,aACnBC,EAAc,GAAD,OAAKH,EAAKI,WAAW,EAArB,YAA0BJ,EAAKK,UAA/B,YAA4CL,EAAKM,eArCzC,4CA8C3B,sBAAAjB,EAAA,0DACyBkB,OAAOC,QAAQ,4DADxC,0CAImCtB,IAAM,CAACuB,IAAI,SAAD,OAAW3B,GAAMY,KAAM,CAACF,MAAOpB,EAASsC,KAAKlB,OAAQmB,OAAQ,WAJ1G,OAKgC,WALhC,OAKwBjB,OAERnB,EAAY,CAACqC,KAAK,gBAAgBC,MAAM,4CAExC1C,EAAM2C,QAAQC,KAAd,mBAA+B3C,EAASsC,KAAKM,YAT7D,gDAYYrB,QAAQC,IAAI,WAZxB,0DA9C2B,sBA+D3B,OACI,eAAC,IAAD,CAAMG,MAAOnB,EAAKmB,MAAlB,UACJ,sBAAKkB,UAAU,iCAAf,UACI,6BAAKrC,EAAKmB,UA1BP3B,EAAS8C,UACD9C,EAASsC,KAAKM,UAAYpC,EAAKuC,OAAOH,UA2BjD,uBAAMC,UAAU,OAAhB,UACA,cAAC,IAAD,CAAMG,GAAE,gBAAWtC,EAAX,SAAsBuC,WAAS,OAAOC,WAAS,OAAOL,UAAU,oBAAxE,SAA6F,mBAAGA,UAAU,kBAC1G,cAAC,IAAD,CAAcnC,GAAG,OAAOmC,UAAU,mBAElC,cAAC,IAAD,CAAMG,GAAG,IAAIG,QAxEU,2CAwEcF,WAAS,SAASC,WAAS,SAASL,UAAU,iCAAnF,SAAoH,mBAAGA,UAAU,mBACjI,cAAC,IAAD,CAAcnC,GAAG,SAASmC,UAAU,yBAIpC,oBAAGA,UAAU,wBAAb,UACA,cAAC,IAAD,CAAMG,GAAE,mBAAcxC,EAAKuC,OAAOH,UAAlC,SACI,qBAAKC,UAAU,cAAcO,IAAK5C,EAAKuC,OAAOM,WAFlD,aAIU,cAAC,IAAD,CAAML,GAAE,mBAAcxC,EAAKuC,OAAOH,UAAlC,SAA+CpC,EAAKuC,OAAOH,WAJrE,IAIuFb,KAGvF,qBAAKc,UAAU,eAAf,SACI,cAAC,IAAD,CAAeS,SAAU9C,EAAK+C","file":"static/js/8.4f96467b.chunk.js","sourcesContent":["import React ,{useEffect,useState,useContext}from 'react'\r\nimport Page from './Pages';\r\nimport { Link ,useParams,withRouter} from 'react-router-dom';\r\nimport Axios from 'axios';\r\nimport Loader from './Loader';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport NotFound from './NotFound';\r\nimport StateContext from '../StateContext';\r\nimport DispatchContext from '../DispatchContext';\r\n\r\nfunction ViewSinglePost(props) {\r\n    const appState = useContext(StateContext);\r\n    const appDispatch = useContext(DispatchContext);\r\n    const [isLoading,setIsLoading]=useState(true);\r\n    const [post,setPost]=useState();\r\n    const {id} =useParams();\r\n\r\n    useEffect(() =>{\r\n        const ourRequest = Axios.CancelToken.source();\r\n        async function fetchPost(){\r\n            try {\r\n                const response=await Axios.get(`/post/${id}`,{cancelToken: ourRequest.token});\r\n                setPost(response.data);\r\n                setIsLoading(false);\r\n            } catch (error) {\r\n                console.log('error in loading post !');\r\n            }\r\n        }\r\n        fetchPost();\r\n        return()=>{\r\n            ourRequest.cancel()\r\n        }\r\n    },[id]); \r\n\r\n    if(!isLoading && !post){\r\n        return <NotFound />\r\n    }\r\n\r\n    if(isLoading){\r\n        return(\r\n        <Page title=''>\r\n            <Loader/>\r\n        </Page>\r\n        )\r\n    }\r\n    \r\n    const date=new Date(post.createdDate);\r\n    const dateFormatted= `${date.getMonth()+1}/${date.getDate()}/${date.getFullYear()}`\r\n\r\n    function isOwner(){\r\n        if(appState.loggedIn){\r\n            return appState.user.username == post.author.username;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    async function deleteHandler(){\r\n        const confirmation = window.confirm('Are you sure you want to delete this post ? ðŸ¤”')\r\n        if(confirmation){\r\n            try {\r\n                const response = await Axios({url: `/post/${id}`, data: {token: appState.user.token}, method: 'delete'})\r\n                if(response.data == 'Success'){\r\n                    // display flash message\r\n                    appDispatch({type:'flashMessages',value:'Post successfully deleted. ðŸ‘Œ'})\r\n                    // back to profile\r\n                    props.history.push(`/profile/${appState.user.username}`);\r\n                }\r\n            } catch (error) {\r\n                console.log('error !')\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Page title={post.title}>\r\n    <div className=\"d-flex justify-content-between\">\r\n        <h2>{post.title}</h2>\r\n        {isOwner() &&(\r\n        <span className=\"pt-2\">\r\n        <Link to={`/post/${id}/edit`} data-tip='Edit' data-for='edit' className=\"text-primary mr-2\" ><i className=\"fas fa-edit\"></i></Link>\r\n        <ReactTooltip id='edit' className='custom-tooltip'/>\r\n\r\n        <Link to=\"/\" onClick={deleteHandler} data-tip='Delete' data-for='delete' className=\"delete-post-button text-danger\"><i className=\"fas fa-trash\"></i></Link>\r\n        <ReactTooltip id='delete' className='custom-tooltip'/> \r\n        </span>\r\n        )}\r\n    </div>\r\n        <p className=\"text-muted small mb-4\">\r\n        <Link to={`/profile/${post.author.username}`}>\r\n            <img className=\"avatar-tiny\" src={post.author.avatar} />\r\n        </Link>\r\n        Posted by <Link to={`/profile/${post.author.username}`}>{post.author.username}</Link> {dateFormatted}\r\n        </p>\r\n\r\n        <div className=\"body-content\">\r\n            <ReactMarkdown children={post.body}/>\r\n        </div>\r\n        </Page>\r\n    )\r\n}\r\n\r\nexport default withRouter(ViewSinglePost);\r\n"],"sourceRoot":""}