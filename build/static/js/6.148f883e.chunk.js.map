{"version":3,"sources":["components/CreatePost.js"],"names":["withRouter","props","useState","title","setTitle","body","setBody","appDispatch","useContext","DispatchContext","appState","StateContext","e","a","preventDefault","Axios","post","token","user","response","type","value","username","history","push","data","console","log","onSubmit","className","htmlFor","onChange","target","autoFocus","name","id","placeholder","autoComplete","required"],"mappings":"8MAiDeA,uBA1Cf,SAAoBC,GAClB,MAA0BC,qBAA1B,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAwBF,qBAAxB,mBAAOG,EAAP,KAAaC,EAAb,KACMC,EAAcC,qBAAWC,KACzBC,EAAWF,qBAAWG,KAJH,4CAMzB,WAA4BC,GAA5B,eAAAC,EAAA,6DACED,EAAEE,iBADJ,kBAG2BC,IAAMC,KAAK,eAAgB,CAAEb,QAAOE,OAAMY,MAAOP,EAASQ,KAAKD,QAH1F,OAGUE,EAHV,OAKIZ,EAAY,CAAEa,KAAM,gBAAiBC,MAAM,YAAD,OAAcX,EAASQ,KAAKI,SAA5B,2CAC1CrB,EAAMsB,QAAQC,KAAd,gBAA4BL,EAASM,OACrCC,QAAQC,IAAI,yBAPhB,kDASID,QAAQC,IAAI,wBAThB,2DANyB,sBAmBzB,OACE,cAAC,IAAD,CAAMxB,MAAM,kBAAZ,SACE,uBAAMyB,SArBe,4CAqBrB,UACE,sBAAKC,UAAU,aAAf,UACE,uBAAOC,QAAQ,aAAaD,UAAU,kBAAtC,SACE,4CAEF,uBAAQE,SAAU,SAAAnB,GAAC,OAAIR,EAASQ,EAAEoB,OAAOX,QAAQY,WAAS,EAACC,KAAK,QAAQC,GAAG,aAAaN,UAAU,kDAAkDT,KAAK,OAAOgB,YAAY,GAAGC,aAAa,WAG9L,sBAAKR,UAAU,aAAf,UACE,uBAAOC,QAAQ,YAAYD,UAAU,0BAArC,SACE,mDAEF,0BAAUS,UAAQ,EAACP,SAAU,SAAAnB,GAAC,OAAIN,EAAQM,EAAEoB,OAAOX,QAAQa,KAAK,OAAOC,GAAG,YAAYN,UAAU,0CAA0CT,KAAK,YAGjJ,wBAAQS,UAAU,kBAAlB","file":"static/js/6.148f883e.chunk.js","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\"\r\nimport Page from \"./Pages\"\r\nimport Axios from \"axios\"\r\nimport { withRouter } from \"react-router-dom\"\r\nimport DispatchContext from \"../DispatchContext\"\r\nimport StateContext from \"../StateContext\"\r\n\r\nfunction CreatePost(props) {\r\n  const [title, setTitle] = useState()\r\n  const [body, setBody] = useState()\r\n  const appDispatch = useContext(DispatchContext)\r\n  const appState = useContext(StateContext)\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault()\r\n    try {\r\n      const response = await Axios.post(\"/create-post\", { title, body, token: appState.user.token })\r\n      // Redirect to new post url\r\n      appDispatch({ type: \"flashMessages\", value: `Congrats ${appState.user.username}, you created a new post.ðŸ˜‰` })\r\n      props.history.push(`/post/${response.data}`)\r\n      console.log(\"New post was created.\")\r\n    } catch (e) {\r\n      console.log(\"There was a problem.\")\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Page title=\"Create New Post\">\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"post-title\" className=\"text-muted mb-1\">\r\n            <small>Title</small>\r\n          </label>\r\n          <input  onChange={e => setTitle(e.target.value)} autoFocus name=\"title\" id=\"post-title\" className=\"form-control form-control-lg form-control-title\" type=\"text\" placeholder=\"\" autoComplete=\"off\" />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"post-body\" className=\"text-muted mb-1 d-block\">\r\n            <small>Body Content</small>\r\n          </label>\r\n          <textarea required onChange={e => setBody(e.target.value)} name=\"body\" id=\"post-body\" className=\"body-content tall-textarea form-control\" type=\"text\"></textarea>\r\n        </div>\r\n\r\n        <button className=\"btn btn-primary\">Save New Post</button>\r\n      </form>\r\n    </Page>\r\n  )\r\n}\r\n\r\nexport default withRouter(CreatePost)\r\n"],"sourceRoot":""}